diff --git a/drivers/ipoe/ipoe.c b/drivers/ipoe/ipoe.c
index f3acb3f..4805623 100644
--- a/drivers/ipoe/ipoe.c
+++ b/drivers/ipoe/ipoe.c
@@ -255,7 +255,7 @@ static int check_nat_required(struct sk_buff *skb, struct net_device *link)
 	if (IS_ERR(rt))
 		return 0;
 
-	if (rt->rt_gateway || (rt->dst.dev != link && rt->dst.dev != skb->dev))
+	if (rt->rt_gw4 || (rt->dst.dev != link && rt->dst.dev != skb->dev))
 		r = 1;
 
 	ip_rt_put(rt);
@@ -1729,6 +1729,7 @@ static int ipoe_nl_cmd_del_net(struct sk_buff *skb, struct genl_info *info)
 	return 0;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 static struct nla_policy ipoe_nl_policy[IPOE_ATTR_MAX + 1] = {
 	[IPOE_ATTR_NONE]		    = { .type = NLA_UNSPEC,                     },
 	[IPOE_ATTR_ADDR]	      = { .type = NLA_U32,                        },
@@ -1740,71 +1741,94 @@ static struct nla_policy ipoe_nl_policy[IPOE_ATTR_MAX + 1] = {
 	[IPOE_ATTR_IFINDEX]     = { .type = NLA_U32,                        },
 	[IPOE_ATTR_LINK_IFINDEX]= { .type = NLA_U32,                        },
 };
+#endif
 
 static struct genl_ops ipoe_nl_ops[] = {
 	{
 		.cmd = IPOE_CMD_NOOP,
 		.doit = ipoe_nl_cmd_noop,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		/* can be retrieved by unprivileged users */
 	},
 	{
 		.cmd = IPOE_CMD_CREATE,
 		.doit = ipoe_nl_cmd_create,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_DELETE,
 		.doit = ipoe_nl_cmd_delete,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_MODIFY,
 		.doit = ipoe_nl_cmd_modify,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_GET,
 		.dumpit = ipoe_nl_cmd_dump_sessions,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 	},
 	{
 		.cmd = IPOE_CMD_ADD_IF,
 		.doit = ipoe_nl_cmd_add_interface,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_DEL_IF,
 		.doit = ipoe_nl_cmd_del_interface,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_ADD_EXCLUDE,
 		.doit = ipoe_nl_cmd_add_exclude,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_DEL_EXCLUDE,
 		.doit = ipoe_nl_cmd_del_exclude,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_ADD_NET,
 		.doit = ipoe_nl_cmd_add_net,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = IPOE_CMD_DEL_NET,
 		.doit = ipoe_nl_cmd_del_net,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = ipoe_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 };
diff --git a/drivers/vlan_mon/vlan_mon.c b/drivers/vlan_mon/vlan_mon.c
index b6476d4..b290d6b 100644
--- a/drivers/vlan_mon/vlan_mon.c
+++ b/drivers/vlan_mon/vlan_mon.c
@@ -616,6 +616,7 @@ static int vlan_mon_nl_cmd_check_busy(struct sk_buff *skb, struct genl_info *inf
 	return ret;
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 static struct nla_policy vlan_mon_nl_policy[VLAN_MON_ATTR_MAX + 1] = {
 	[VLAN_MON_ATTR_NONE]		    = { .type = NLA_UNSPEC,                     },
 	[VLAN_MON_ATTR_VLAN_MASK]	  = { .type = NLA_BINARY, .len = 4096/8       },
@@ -623,42 +624,55 @@ static struct nla_policy vlan_mon_nl_policy[VLAN_MON_ATTR_MAX + 1] = {
 	[VLAN_MON_ATTR_IFINDEX]     = { .type = NLA_U32,                        },
 	[VLAN_MON_ATTR_VID]         = { .type = NLA_U16,                        },
 };
+#endif
 
 static struct genl_ops vlan_mon_nl_ops[] = {
 	{
 		.cmd = VLAN_MON_CMD_NOOP,
 		.doit = vlan_mon_nl_cmd_noop,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = vlan_mon_nl_policy,
+#endif
 		/* can be retrieved by unprivileged users */
 	},
 	{
 		.cmd = VLAN_MON_CMD_ADD,
 		.doit = vlan_mon_nl_cmd_add_vlan_mon,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = vlan_mon_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = VLAN_MON_CMD_ADD_VID,
 		.doit = vlan_mon_nl_cmd_add_vlan_mon_vid,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = vlan_mon_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = VLAN_MON_CMD_DEL,
 		.doit = vlan_mon_nl_cmd_del_vlan_mon,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = vlan_mon_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = VLAN_MON_CMD_CHECK_BUSY,
 		.doit = vlan_mon_nl_cmd_check_busy,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = vlan_mon_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 	{
 		.cmd = VLAN_MON_CMD_DEL_VID,
 		.doit = vlan_mon_nl_cmd_del_vlan_mon_vid,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,2,0)
 		.policy = vlan_mon_nl_policy,
+#endif
 		.flags = GENL_ADMIN_PERM,
 	},
 };
